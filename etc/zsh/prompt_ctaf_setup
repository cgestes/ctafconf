#!/bin/sh
## zshprompt for ctafconf in /ctaf/conf/ctafconf/zsh
##
## Made by GESTES Cedric
## Login   <ctaf42@gmail.com>
##
## Started on  Fri Feb 11 01:37:23 2005 GESTES Cedric
## Last update Thu May 27 18:03:33 2010 Cedric GESTES
##
##CTAFCONF

autoload -Uz zgitinit && zgitinit
autoload -Uz colors   && colors
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

source ~/.config/ctafconf/etc/zsh/vcs.zsh


####################################
# COLORS
####################################
bright="\033[m1;"
dull="\033[m0;"
for color in BLACK RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
  eval PR_$color='%{$fg_no_bold[${(L)color}]%}'
  eval PR_BG_$color='%{$bg[${(L)color}]%}'
  eval PR_LIGHT_$color='%{$fg_bold[${(L)color}]%}'
  (( count = $count + 1 ))
done
PR_NO_COLOUR="%{$terminfo[sgr0]%}"

#customise this two variable to change foreground/background
#left empty for automatic default
PR_BG_PROMPT=""
PR_FG_PROMPT="${PR_NO_COLOUR}"

####################################
# VCS_INFO
####################################
#may be slow
zstyle ':vcs_info:*:ctaf:*' check-for-changes true
#may be slow
zstyle ':vcs_info:*:ctaf:*' get-revision      false
zstyle ':vcs_info:*:ctaf:*' use-simple        false
zstyle ':vcs_info:*:ctaf:*' max-exports       2

zstyle ':vcs_info:*' stagedstr " $(print_icon 'VCS_STAGED_ICON')"
zstyle ':vcs_info:*' unstagedstr " $(print_icon 'VCS_UNSTAGED_ICON')"

POWERLEVEL9K_VCS_GIT_HOOKS=(vcs-detect-changes git-untracked git-aheadbehind git-stash git-remotebranch git-tagname)
zstyle ':vcs_info:git*+set-message:*' hooks $POWERLEVEL9K_VCS_GIT_HOOKS

# set formats
# %b - branchname
# %u - unstagedstr (see below)
# %c - stangedstr (see below)
# %a - action (e.g. rebase-i)
# %R - repository path
# %S - path in the repository
#default format for standard vcs
ACTION="[${PR_LIGHT_RED}%a${PR_FG_PROMPT}]"
FORMAT="%s on ${PR_MAGENTA}%b${PR_FG_PROMPT}%u%m"
FORMAT_ACTION="$FORMAT $ACTION"
zstyle ':vcs_info:*:ctaf:*' formats             "$FORMAT" "%s"
zstyle ':vcs_info:*:ctaf:*' actionformats       "$FORMAT_ACTION" "%s"
zstyle ':vcs_info:*:ctaf:*' branchformat        "${PR_MAGENTA}%b${PR_FG_PROMPT}:${PR_LIGHT_RED}%r${PR_NO_COLOUR}"

prompt_ctaf_git_tracking_branch()
{
  t=$(zgit_tracking_merge)
  if ! [ "$t" = "" ] ; then
    echo " tracking${PR_LIGHT_MAGENTA} ${t}${PR_FG_PROMPT}"
  fi
}

#format vcs information, append information to vcs_info that is a little poor
#this function is called each time a prompt need to be display
#this function set the psvar with changing information
prompt_ctaf_precmd() {
  setopt noxtrace noksharrays localoptions
  #if the function is not found, fail silently (degraded mode)
  vcs_info 'ctaf' 2>/dev/null
  psvar=()
  case "$vcs_info_msg_1_" in
    git)
      GIT_FORMAT="$vcs_info_msg_0_ (${PR_LIGHT_YELLOW}$(git describe --always --tags 2>/dev/null)${PR_FG_PROMPT})$(prompt_ctaf_git_tracking_branch 2>/dev/null)"
      psvar[1]="[$GIT_FORMAT]"
      ;;
    git-svn)
      GITSVN_FORMAT="$vcs_info_msg_0_ (${PR_LIGHT_YELLOW}$(git describe --always --tags) ${PR_MAGENTA}$(zgit_svnbranch)${PR_FG_PROMPT}:${PR_LIGHT_RED}$(zgit_svnhead)${PR_FG_PROMPT})$(prompt_ctaf_git_tracking_branch)"
      psvar[1]="[$GITSVN_FORMAT]"
      ;;
    "")
      #no vcs info => dont do anything
      ;;
    *)
      psvar[1]="[$vcs_info_msg_0_]"
      ;;
  esac
  if [ "$psvar[1]" != "" ] ; then
    psvar[1]="${PR_BG_PROMPT}${PR_FG_PROMPT}$psvar[1]${PR_NO_COLOUR}
"
  fi
  psvar[2]=""
  if ! [ -z $CTAFCONF_ENV ] ; then
    psvar[2]="${PR_NO_COLOUR}/${PR_LIGHT_RED}${CTAFCONF_ENV}"
  fi
  if ! [ -z $SCHROOT_COMMAND ] ; then
    psvar[2]="${PR_LIGHT_YELLOW}:SCHROOT${PR_NO_COLOUR}$psvar[2]"
  fi
}



prompt_ctaf_setup () {
  add-zsh-hook precmd prompt_ctaf_precmd 2>/dev/null
  BASE_PROMPT="${PR_BG_PROMPT}${PR_LIGHT_MAGENTA}%(!.%SROOT%s.${PR_FG_PROMPT}%n${PR_LIGHT_YELLOW})\
@${PR_LIGHT_GREEN}%m\$psvar[2]${PR_LIGHT_MAGENTA} \
[%(?.${PR_FG_PROMPT}$?.${PR_LIGHT_RED}% err %?)${PR_LIGHT_MAGENTA}] \
[${PR_LIGHT_BLUE}%~${PR_LIGHT_MAGENTA}]${PR_NO_COLOUR}
${PR_BG_PROMPT}${PR_FG_PROMPT}z${PR_LIGHT_GREEN}%(!.#.$)${PR_NO_COLOUR} "

  PROMPT="\$psvar[1]${BASE_PROMPT}"
  RPROMPT="[${PR_BG_PROMPT}${PR_LIGHT_CYAN}%D ${PR_LIGHT_GREEN}%T${PR_NO_COLOUR}]"

  PS2=''
}

prompt_ctaf_setup "$@"
