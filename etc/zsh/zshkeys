#!/bin/sh
## zshokeys for ctafconf in /ctaf/conf/ctafconf/zsh
##
## Made by Cedric GESTES
## Login   <ctaf42@gmail.com>
##
## Started on  Tue Aug 11 14:51:10 2009 Cedric GESTES
## Last update Fri May 21 16:34:59 2010 Cedric GESTES
##
##CTAFCONF
#
#Caution ^H should never be binded
#

#emacs style
bindkey -e

#example to bind a key to a command (ctrl+t)
#bindkey -s '^T' 'uptime\n'

#give all in the history completion : up and down search
# in the history based on the beginning of the line
#Down
bindkey '^[[A' history-beginning-search-backward
#Up
bindkey '^[[B' history-beginning-search-forward

#pageDown
bindkey "^[[6~" down-line-or-history
#pageUp
bindkey "^[[5~" up-line-or-history

autoload run-help
#Ctrl-H (call man)
# On FreeBSD, backspace sends ^H and hence
# run-help gets called...
#
# Disabling for now
bindkey "^xh" run-help

#Ctrl-X W (call which)
bindkey "^xw" which-command

#ctrl-e (edit the current command line with an editor)
autoload edit-command-line && zle -N edit-command-line
bindkey "^xe" edit-command-line

#ctrl-n accept the completion and pass to the next one (usefull to select many files)
bindkey "^n" accept-and-menu-complete
#alt+return
bindkey "\M-^M" accept-and-menu-complete

#zle menu-complete 2>/dev/null
#bindkey -N menuselect
#ctrl-c in completion menu go back just before completion
bindkey -M menuselect "^c" undo
#backspace
#bindkey -M menuselect "^?" undo
#ctrl+z
bindkey -M menuselect "^Z" undo

bindkey -M menuselect "^c" undo


#bindkey -M menuselect "^I" menu-expand-or-interactive


autoload zcalc
bindkey -s "^xc" 'zcalc\n'

#bindkey "^xi" interactive
# Active dead keys

#make home/end working
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
bindkey "\e[2~" quoted-insert
bindkey "\e[3~" delete-char

#On an empty command line runs bg (so that Ctrl+Z Ctrl+Z suspends a program and
#immediately resumes it in the background).
#On a non-empty command line, suspend the current command edition:
#let me type another command, and when that second command line finished,
#I get back the first command to edit.
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    bg
    zle redisplay
  else
    zle push-input
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z
